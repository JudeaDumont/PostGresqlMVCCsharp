//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace LinqModels
{
	/// <summary>
	/// Database       : postgres
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 13.1
	/// </summary>
	public partial class PostgresDB : LinqToDB.Data.DataConnection
	{
		public ITable<Test> Tests { get { return this.GetTable<Test>(); } }
		public ITable<User> Users { get { return this.GetTable<User>(); } }

		partial void InitMappingSchema()
		{
		}

		public PostgresDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public PostgresDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="public", Name="test")]
	public partial class Test
	{
		[Column("user"),             NotNull] public string User { get; set; } // character varying(20)
		[Column("id"),   PrimaryKey, NotNull] public long   Id   { get; set; } // bigint
	}

	[Table(Schema="public", Name="user")]
	public partial class User
	{
		[Column("user"),                  NotNull] public string UserColumn { get; set; } // character varying(20)
		[Column("id"),       PrimaryKey,  NotNull] public long   Id         { get; set; } // bigint
		[Column("password"),              NotNull] public string Password   { get; set; } // character varying(64)
		[Column("role"),        Nullable         ] public string Role       { get; set; } // character varying
	}

	public static partial class TableExtensions
	{
		public static Test Find(this ITable<Test> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, long Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}

#pragma warning restore 1591
